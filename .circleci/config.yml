version: 2.1

commands:
  inst_deps:
    steps:
      - run:
          name: Install dependencies # Installs what is required for the app's functionality
          command: |
            npm ci --prefix src/

  inst_nodejsscan:
    steps:
      - run:
          name: Install nodejsscan with python3-pip # Installs a tool used for security testing
          command: |
            sudo apt update
            sudo apt install python3-pip
            pip3 install nodejsscan
  
jobs:
  ci-build:
    docker:
      - image: circleci/node:lts
    environment:
      JEST_JUNIT_OUTPUT_DIR: test-output # Directory where test results will be saved
    steps:
      - checkout
      - inst_deps
      - run:
          name: Linting
          command: |
            npm install @vue/cli
            vue add eslint
            vue-cli-service lint
      - run:
          name: Run unit tests
          command: |
            npm run test-unit --prefix src/ -- --coverage
      - store_test_results: # saves the actual test results
          path: ./src/test-output
      - store_artifacts: # saves an html-based report indicating how much of the code is covered by the tests
          path: ./src/coverage/lcov-report

  sast: # Checks the application for potentially security risks, and cause the build to fail if it finds any.
    docker:
      - image: circleci/node:lts
    steps:
      - checkout
      - inst_nodejsscan
      - run:
          name: Run nodejsscan
          command: |
            nodejsscan -d ./ -o sast-output.json
      - store_artifacts:
          path: sast-output.json
      - run:
          name: Analyse sast results # The code is responsible for breaking the build if issue is found.
          command: |
            exit $(cat sast-output.json | jq .total_count.sec) 

  pack: # Stores a deployable version of the applcation
    docker:
      - image: circleci/node:lts
    environment:
      NODE_ENV: production
    steps:
      - checkout
      - inst_deps
      - run:
          name: pack
          command: |
            cd src/
            npm pack
      - store_artifacts:
          path: ./src/simpletodoapp-1.0.0.tgz

  integration-test: # Runs tests to ensure the app correctly talks to the database
    docker:
      - image: circleci/node:lts
      - image: mongo:4.0 # This creates an image of the database
    environment:
      JEST_JUNIT_OUTPUT_DIR: test-output # Directory where test results will be saved
    steps:
      - checkout
      - inst_deps
      - run: 
          name: Run integration tests
          command: |
            npm run test-integration --prefix src/
      - store_test_results:
          path: ./src/test-output
    

workflows:
  build-and-package:
    jobs:
      - ci-build
      - integration-test
      - sast:
          requires:
            - ci-build
      - pack:
          requires: # Requires forces the pack job to wait for the below jobs to finish before running,
                    # this means that if either fail, pack will not run at all
            - sast
            - integration-test
          filters: # The filter stops pack from running on branches that are not master.
            branches:
              only:
                - master
